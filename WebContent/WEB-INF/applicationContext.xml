<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
	- Application context definition for "springapp" DispatcherServlet.
       Reversion: $Name:  $
-->    
<beans>
	<!-- dataSource config -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="url" value="jdbc:sqlserver://192.168.10.242:1433;DatabaseName=CRM_SUQIAN" />
		<property name="username" value="sa" />
        <property name="password" value="linktel135!#%"/>
        
        <property name="initialSize" value="30" />
        <property name="minIdle" value="5" />
        <property name="maxIdle" value="20" />
        <!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="80"/>  
        
         <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/> 
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
        
        
        
       	<property name="defaultAutoCommit" value="true"/>
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
    </bean> 
   <!--  <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="url" value="jdbc:sqlserver://192.168.10.251:1433;DatabaseName=HelpCenter" />
		<property name="username" value="sa" />
        <property name="password" value="linktel135!#%"/>
        <property name="initialSize" value="10" />
        <property name="minIdle" value="1" />
        <property name="maxIdle" value="20" />
       	<property name="defaultAutoCommit" value="true"/>
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
    </bean> 
     -->  
    <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="url" value="jdbc:sqlserver://192.168.10.242:1433;DatabaseName=RabbitMQ" />
		<property name="username" value="sa" />
        <property name="password" value="linktel135!#%"/>
        <property name="initialSize" value="30" />
        <property name="minIdle" value="5" />
        <property name="maxIdle" value="20" />
        <!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="80"/>  
        
         <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/> 
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
       	<property name="defaultAutoCommit" value="true"/>
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
    </bean>     

<!-- <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="url" value="jdbc:sqlserver://192.168.10.246:1433;DatabaseName=CRM2016_JSTT" />
		<property name="username" value="sa" />
        <property name="password" value="sa"/>
        <property name="initialSize" value="10" />
        <property name="minIdle" value="1" />
        <property name="maxIdle" value="20" />
       	<property name="defaultAutoCommit" value="true"/>
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
    </bean>    
  -->
  <bean id="dataSource3" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://192.168.10.248:5432/cdr" />
		<property name="username" value="postgres" />
        <property name="password" value="linktel"/>
        <property name="initialSize" value="30" />
        <property name="minIdle" value="5" />
        <property name="maxIdle" value="20" />
        <!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="80"/>  
        
         <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/> 
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
       	<property name="defaultAutoCommit" value="true"/>
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
	   
    </bean> 
    
   
     
    
    
    
    
    
      
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
          lazy-init="true">
      
    </bean>
   
    <!-- SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		abstract="false" singleton="true" lazy-init="default"
		autowire="default" dependency-check="default">
		<property name="dataSource">
			<ref local="dataSource" />			
		</property>
	
        <property name="lobHandler">
            <ref local="lobHandler"/>
        </property>
        <property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/company/data/ho/</value>
			</list>
		</property>
		<property name="hibernateProperties">
		    <props>
		     <prop key="hibernate.dialect">
		      org.hibernate.dialect.SQLServerDialect
		     </prop>
		     <prop key="hibernate.show_sql">false</prop>
		    </props>
		</property>
	</bean>
	
<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		abstract="false" singleton="true" lazy-init="default"
		autowire="default" dependency-check="default">
		<property name="dataSource">
			<ref local="dataSource2" />			
		</property>
        <property name="lobHandler">
            <ref local="lobHandler"/>
        </property>
        <property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/company/data/ho/</value>
			</list>
		</property>
		<property name="hibernateProperties">
		    <props>
		     <prop key="hibernate.dialect">
		      org.hibernate.dialect.SQLServerDialect
		     </prop>
		     <prop key="hibernate.show_sql">false</prop>
		    </props>
		   </property>

	</bean>

 <bean id="sessionFactory3"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		abstract="false" singleton="true" lazy-init="default"
		autowire="default" dependency-check="default">
		<property name="dataSource">
			<ref local="dataSource3" />			
		</property>
        <property name="lobHandler">
            <ref local="lobHandler"/>
        </property>
        <property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/company/data/ho/</value>
			</list>
		</property>
		<property name="hibernateProperties">
		    <props>
		     <prop key="hibernate.dialect">
		      org.hibernate.dialect.PostgreSQLDialect
		     </prop>
		     <prop key="hibernate.show_sql">false</prop>
		    </props>
		   </property>

	</bean>
	<bean id="transactionManager3"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory3" />
		</property>
		
	</bean>
	
	<!-- TransactionManager  -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>		
		
	</bean>
	
	<bean id="transactionManager2"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory2" />
		</property>
		
	</bean>
	
	
    <!-- abstract transaction object  create -->
	<bean id="baseService" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		
		<property name="transactionAttributes">
			<props>
				<prop key="exec*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="re*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="cancel*">PROPAGATION_REQUIRED</prop>
                <prop key="ad*">PROPAGATION_REQUIRED</prop>
                <prop key="send*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED, readOnly</prop>
			</props>
		</property>
	</bean>
	
	
	
	
	<bean id="backAction" class="com.company.action.BackAction" singleton="false">
		<property name="backService" ref="backService"></property>
		
		<property name="pagerService">
			<ref bean="pagerService" />
		</property>
	</bean>
	
	
	<bean id="backService" class="com.company.service.BackService">
		<property name="backDao" ref="backDao"></property>	
			<property name="baDao" ref="baDao"></property>	
			<property name="pgDao" ref="pgDao"></property>
	</bean>
	
	<bean id="backDao" class="com.company.data.dao.BackDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
		
		
	</bean>
	 
		<bean id="baDao" class="com.company.data.dao.BaDao">	
		<property name="sessionFactory" ref="sessionFactory2"></property>
	</bean>
	
	<bean id="pgDao" class="com.company.data.dao.PgDao">	
		<property name="sessionFactory" ref="sessionFactory3"></property>
	</bean>
	<bean id="pagerService" class="com.company.common.PagerService" />  

</beans>

